{
  "version": 3,
  "sources": ["../../../../../../../../apps/api/src/socket/handlers/room.handler.ts"],
  "sourcesContent": ["import { ExtendedSocket } from '../../lib/types';\r\nimport { getRoomMembers, joinMemberService } from '../../services/room.service';\r\nimport { emitError } from '../lib/utils';\r\n\r\n// Define the joinHandler function\r\nexport async function joinHandler(socket: ExtendedSocket, roomId: string) {\r\n  try {\r\n    // Attempt to add the user as a member of the room\r\n    const isMemberJoined = await joinMemberService(\r\n      roomId,\r\n      socket.request.session.user.id\r\n    );\r\n\r\n    // If the user is not added as a member, emit an error message\r\n    if (!isMemberJoined) {\r\n      socket.emit(\r\n        'socket:error',\r\n        'Failed to join the room. Please try again later.'\r\n      );\r\n      return false;\r\n    }\r\n\r\n    // If successful, join the room\r\n    socket.join(roomId);\r\n    socket.request.session.roomId = roomId;\r\n    return true;\r\n  } catch (error) {\r\n    // If an error occurs, emit an error message\r\n    socket.emit('socket:error', error.message);\r\n    return false;\r\n  }\r\n}\r\n\r\nexport async function membersList(socket: ExtendedSocket) {\r\n  const roomId = socket.request.session.roomId;\r\n\r\n  if (!roomId) {\r\n    emitError(socket, 'There is no roomId to send members list');\r\n    return null;\r\n  }\r\n\r\n  // Fetch the members list\r\n  const members_list = await getRoomMembers(roomId);\r\n\r\n  return members_list;\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,kBAAkD;AAClD,mBAA0B;AAG1B,eAAsB,YAAY,QAAwB,QAAgB;AACxE,MAAI;AAEF,UAAM,iBAAiB,UAAM;AAAA,MAC3B;AAAA,MACA,OAAO,QAAQ,QAAQ,KAAK;AAAA,IAC9B;AAGA,QAAI,CAAC,gBAAgB;AACnB,aAAO;AAAA,QACL;AAAA,QACA;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAGA,WAAO,KAAK,MAAM;AAClB,WAAO,QAAQ,QAAQ,SAAS;AAChC,WAAO;AAAA,EACT,SAAS,OAAO;AAEd,WAAO,KAAK,gBAAgB,MAAM,OAAO;AACzC,WAAO;AAAA,EACT;AACF;AAEA,eAAsB,YAAY,QAAwB;AACxD,QAAM,SAAS,OAAO,QAAQ,QAAQ;AAEtC,MAAI,CAAC,QAAQ;AACX,gCAAU,QAAQ,yCAAyC;AAC3D,WAAO;AAAA,EACT;AAGA,QAAM,eAAe,UAAM,4BAAe,MAAM;AAEhD,SAAO;AACT;",
  "names": []
}
