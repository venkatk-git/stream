{
  "version": 3,
  "sources": ["../../../../../../../apps/api/src/services/video.service.ts"],
  "sourcesContent": ["import axios from 'axios';\r\n\r\nimport Room from '../models/room.model';\r\n\r\nimport { isValidRoomService } from './room.service';\r\n\r\nexport async function getVideoQueue(roomId: string) {\r\n  try {\r\n    if (!roomId) {\r\n      console.error(`Room not found: { roomId: ${roomId} }`);\r\n      return null;\r\n    }\r\n\r\n    // Check if room exists\r\n    const isRoomValid = await isValidRoomService(roomId);\r\n    if (!isRoomValid) {\r\n      console.error(`Room not found: { roomId: ${roomId} }`);\r\n      return null;\r\n    }\r\n\r\n    const video_queue = await Room.findOne({ roomId }).select('videoQueue');\r\n\r\n    return video_queue.videoQueue;\r\n  } catch (error) {\r\n    console.error(error);\r\n    return null;\r\n  }\r\n}\r\n\r\nexport async function addVideoToQueue(roomId: string, videoId: string) {\r\n  try {\r\n    if (!roomId) {\r\n      console.error(`Room not found: { roomId: ${roomId} }`);\r\n      return null;\r\n    }\r\n\r\n    // Check if room exists\r\n    const isRoomValid = await isValidRoomService(roomId);\r\n    if (!isRoomValid) {\r\n      console.error(`Room not found: { roomId: ${roomId} }`);\r\n      return null;\r\n    }\r\n\r\n    const room = await Room.findOne({ roomId });\r\n\r\n    const ytResponse = await axios.get(\r\n      `https://www.googleapis.com/youtube/v3/videos?part=snippet&id=${videoId}&key=${process.env.GOOGLE_API_KEY}`\r\n    );\r\n\r\n    if (ytResponse.statusText != 'OK' || ytResponse.data.items.length == 0) {\r\n      return null;\r\n    }\r\n\r\n    const title = ytResponse.data.items[0].snippet.title;\r\n    const videoQueue = room?.videoQueue;\r\n    videoQueue.push({\r\n      id: videoId,\r\n      title,\r\n    });\r\n    await room.save();\r\n\r\n    return videoQueue;\r\n  } catch (error) {\r\n    console.error(error);\r\n    return null;\r\n  }\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkB;AAElB,kBAAiB;AAEjB,IAAAA,eAAmC;AAEnC,eAAsB,cAAc,QAAgB;AAClD,MAAI;AACF,QAAI,CAAC,QAAQ;AACX,cAAQ,MAAM,6BAA6B,MAAM,IAAI;AACrD,aAAO;AAAA,IACT;AAGA,UAAM,cAAc,UAAM,iCAAmB,MAAM;AACnD,QAAI,CAAC,aAAa;AAChB,cAAQ,MAAM,6BAA6B,MAAM,IAAI;AACrD,aAAO;AAAA,IACT;AAEA,UAAM,cAAc,MAAM,YAAAC,QAAK,QAAQ,EAAE,OAAO,CAAC,EAAE,OAAO,YAAY;AAEtE,WAAO,YAAY;AAAA,EACrB,SAAS,OAAO;AACd,YAAQ,MAAM,KAAK;AACnB,WAAO;AAAA,EACT;AACF;AAEA,eAAsB,gBAAgB,QAAgB,SAAiB;AACrE,MAAI;AACF,QAAI,CAAC,QAAQ;AACX,cAAQ,MAAM,6BAA6B,MAAM,IAAI;AACrD,aAAO;AAAA,IACT;AAGA,UAAM,cAAc,UAAM,iCAAmB,MAAM;AACnD,QAAI,CAAC,aAAa;AAChB,cAAQ,MAAM,6BAA6B,MAAM,IAAI;AACrD,aAAO;AAAA,IACT;AAEA,UAAM,OAAO,MAAM,YAAAA,QAAK,QAAQ,EAAE,OAAO,CAAC;AAE1C,UAAM,aAAa,MAAM,aAAAC,QAAM;AAAA,MAC7B,gEAAgE,OAAO,QAAQ,QAAQ,IAAI,cAAc;AAAA,IAC3G;AAEA,QAAI,WAAW,cAAc,QAAQ,WAAW,KAAK,MAAM,UAAU,GAAG;AACtE,aAAO;AAAA,IACT;AAEA,UAAM,QAAQ,WAAW,KAAK,MAAM,CAAC,EAAE,QAAQ;AAC/C,UAAM,aAAa,MAAM;AACzB,eAAW,KAAK;AAAA,MACd,IAAI;AAAA,MACJ;AAAA,IACF,CAAC;AACD,UAAM,KAAK,KAAK;AAEhB,WAAO;AAAA,EACT,SAAS,OAAO;AACd,YAAQ,MAAM,KAAK;AACnB,WAAO;AAAA,EACT;AACF;",
  "names": ["import_room", "Room", "axios"]
}
